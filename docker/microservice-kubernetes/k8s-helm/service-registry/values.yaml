# Default values for service-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

application:
  namespace: rahul

image:
  repository: rahulkumar07/registry
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1"

# try to read from config.json

#json:
#  eureka_service_address: http://eureka-0.eureka:8761/eureka

env:
  name: eurekaserveraddress
  configName: service-config
  configKey: eureka_service_address
#  configPath: eureka_service_address
#  configKey: config.json

imagePullSecrets: []
nameOverride: "eureka"
fullnameOverride: "eureka"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  clusterIP: None
  type: LoadBalancer
  port: 8761

eurekaService:
  name: eureka-lb

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
